#BlueJ class context
comment0.target=FunNumber
comment0.text=\n\ public\ class\ FunNumber\ holds\ an\ integer\ value\ and\ has\ methods\n\ which\ provide\ mathematical\ information\ about\ the\ number.\n\n\ Complete\ the\ methods\ as\ described\n\n\ @author\ (your\ name)\n\ @date\ (due\ date)\n
comment1.params=num
comment1.target=FunNumber(int)
comment1.text=\n\ constructs\ a\ FunNumber\ with\ value\ num\n
comment10.params=
comment10.target=boolean\ isPrime()
comment10.text=\n\ Determines\ if\ this\ FunNumber\ value\ is\ prime\n\ @return\ true\ if\ this\ value\ is\ prime,\ false\ otherwise\n\ Postcondition\:\ original\ remains\ unchanged\n
comment11.params=
comment11.target=boolean\ isPerfect()
comment11.text=\n\ A\ perfect\ number\ is\ a\ number\ that\ has\ a\ sum\ of\ proper\ factors\n\ equal\ to\ the\ value\ of\ this\ number.\ 6\ is\ a\ perfect\ number\n\ because\ 6\ \=\ 1\ +\ 2\ +\ 3.\n\ @return\ true\ if\ this\ FunNumber\ value\ is\ a\ perfect\ number,\ \n\ \ \ \ \ \ \ false\ otherwise.\n\ Postcondition\:\ original\ remains\ unchanged\n
comment12.params=
comment12.target=FunNumber\ reverse()
comment12.text=\n\ Creates\ a\ new\ FunNumber\ that\ results\ by\ reversing\ the\ digits\ of\n\ this\ FunNumber\n\ @return\ a\ FunNumber\ which\ is\ the\ reverse\ of\ this\ FunNumber\n\ Postcondition\:\ original\ remains\ unchanged\n
comment13.params=
comment13.target=int\ getValue()
comment13.text=\n\ @return\ the\ int\ value\ of\ this\ FunNumber\n\ Postcondition\:\ original\ remains\ unchanged\n
comment14.params=newInt
comment14.target=void\ setValue(int)
comment14.text=\n\ @param\ newInt\ a\ new\ integer\ value\ to\ replace\ original\n\ Postcondition\:\ The\ value\ of\ this\ FunNumber\ is\ newInt\n
comment15.params=other
comment15.target=int\ getSum(FunNumber)
comment15.text=\n\ Precondition\:\ other\ is\ a\ FunNumber\ object\n\ @param\ other\ is\ another\ FunNumber\n\ @return\ sum\ of\ other\ FunNumber\ value\ and\ this\ FunNumber\ value\n\ Postcondition\:\ original\ remains\ unchanged\n
comment16.params=
comment16.target=java.lang.String\ toString()
comment16.text=\n\ @returns\ a\ String\ representation\ of\ the\ integer\ being\ held\n\ Postcondition\:\ original\ remains\ unchanged\n
comment17.params=other
comment17.target=boolean\ equals(FunNumber)
comment17.text=\n\ Precondition\:\ other\ is\ a\ FunNumber\ object\n\ @returns\ true\ if\ other\ holds\ the\ same\ value\ as\ this\ FunNumber\ value\n\ Postcondition\:\ original\ remains\ unchanged\n
comment2.params=
comment2.target=FunNumber()
comment2.text=\n\ constructs\ a\ FunNumber\ with\ a\ random\ value\ \n\ \ \ in\ the\ range\ [-100,\ 100]\n
comment3.params=
comment3.target=int\ findNumDigits()
comment3.text=\n\ Counts\ the\ digits\ in\ this\ FunNumber\ value\n\ Must\ consider\ if\ original\ is\ negative.\n\ @return\ the\ number\ of\ the\ digits\n\ Postcondition\:\ original\ remains\ unchanged\n
comment4.params=
comment4.target=int\ sumDigits()
comment4.text=\n\ Sums\ the\ digits\ in\ this\ FunNumber\ value\n\ Ignore\ the\ sign\ of\ the\ original\ before\ finding\ the\ sum\ of\ the\ digits\n\ @return\ the\ sum\ of\ the\ digits\n\ Postcondition\:\ original\ remains\ unchanged\n
comment5.params=
comment5.target=boolean\ isEven()
comment5.text=\n\ @return\ true\ if\ this\ FunNumber\ is\ even;\n\ \ \ \ \ \ false\ otherwise\n\ Postcondition\:\ original\ remains\ unchanged\n
comment6.params=
comment6.target=boolean\ sumIsDivisor()
comment6.text=\n\ @return\ true\ if\ the\ sum\ of\ the\ digits\ of\ this\ FunNumber\n\ \ \ \ \ \ is\ a\ divisor\ of\ the\ FunNumber;\ false\ otherwise\n\ Postcondition\:\ original\ remains\ unchanged\n
comment7.params=
comment7.target=int\ sumIntsFrom1toNum()
comment7.text=\n\ Sums\ the\ integers\ that\ are\ less\ than\ or\ equal\ to\ this\n\ FunNumber\ value\n\ @return\ the\ sum\ of\ the\ integers\ <\=\ this\ FunNumber\ value;\n\ \ \ \ \ \ \ -1\ if\ original\ is\ non-positive\n\ Postcondition\:\ original\ remains\ unchanged\n
comment8.params=
comment8.target=int\ findFactorial()
comment8.text=\n\ Determines\ the\ factorial\ of\ this\ FunNumber\ value\n\ @return\ this\ FunNumber\ value's\ factorial;\ -1\ if\n\ \ \ \ \ \ \ \ original\ is\ negative\n\ Postcondition\:\ original\ remains\ unchanged\n
comment9.params=
comment9.target=java.lang.String\ allFactors()
comment9.text=\n\ Creates\ a\ String\ representing\ all\ positive\ factors\ of\ this\ FunNumber\ value\n\ factors\ are\ separated\ by\ spaces\n\ ie\:\ factors\ of\ 6\ are\ "1\ 2\ 3\ 6\ "\n\ Ignore\ the\ sign\ of\ the\ original\ before\ finding\ the\ factors\n\ @return\ a\ String\ representation\ of\ the\ factors\ of\ this\ FunNumber\n\ Postcondition\:\ original\ remains\ unchanged\n
numComments=18
